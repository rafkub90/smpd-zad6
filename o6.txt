> library("neuralnet")
> #Generate training data
> #And store them as a dataframe
> traininginput <- as.data.frame(matrix(c(24,350,1,
+                                         24,250,1,
+                                         23,250,1,
+                                         27,250,4,
+                                         24,250,1,
+                                         21,200,5,
+                                         27,250,4,
+                                         21,250,5,
+                                         32,250,5,
+                                         23,250,5
+                                         ), nrow=10, ncol=3))
> trainingoutput <- c(1099, 689, 599, 849, 499, 339, 819, 389, 799, 599)
> #Column bind the data into one variable
> trainingdata <- cbind(traininginput, trainingoutput)
> # Create Vector of Column Max and Min Values
> maxs <- apply(trainingdata[,], 2, max)
> mins <- apply(trainingdata[,], 2, min)
> # Use scale() and convert the resulting matrix to a data frame
> scaled.trainingdata <- as.data.frame(scale(trainingdata[,], center=mins, scale=maxs-mins))
> trainingdata <- scaled.trainingdata
> # Check out results
> print(head(trainingdata, 10))
              V1            V2            V3 trainingoutput
1  0.06590257880 1.00000000000 0.00000000000  1.00000000000
2  1.00000000000 0.01204819277 0.06910569106  0.46052631579
3  0.00000000000 0.09236947791 1.00000000000  0.34210526316
4  0.06590257880 1.00000000000 0.00406504065  0.67105263158
5  0.71346704871 0.00000000000 0.11382113821  0.21052631579
6  0.00000000000 0.08032128514 1.00000000000  0.00000000000
7  0.06303724928 0.79919678715 0.00406504065  0.63157894737
8  0.71346704871 0.01606425703 0.07723577236  0.06578947368
9  0.00000000000 0.10441767068 1.00000000000  0.60526315789
10 0.07449856734 1.00000000000 0.00406504065  0.34210526316
> colnames(trainingdata) <- c("Matryca", "Iluminacja", "Reakcja", "Cena")
> print(trainingdata)
         Matryca    Iluminacja       Reakcja          Cena
1  0.06590257880 1.00000000000 0.00000000000 1.00000000000
2  1.00000000000 0.01204819277 0.06910569106 0.46052631579
3  0.00000000000 0.09236947791 1.00000000000 0.34210526316
4  0.06590257880 1.00000000000 0.00406504065 0.67105263158
5  0.71346704871 0.00000000000 0.11382113821 0.21052631579
6  0.00000000000 0.08032128514 1.00000000000 0.00000000000
7  0.06303724928 0.79919678715 0.00406504065 0.63157894737
8  0.71346704871 0.01606425703 0.07723577236 0.06578947368
9  0.00000000000 0.10441767068 1.00000000000 0.60526315789
10 0.07449856734 1.00000000000 0.00406504065 0.34210526316
> #Train the neural network
> #Going to have C(5, 4, 3) hidden layers
> #Threshold is a numeric value specifying the threshold for the partial
> #derivatives of the error function as stopping criteria.
> net.price <- neuralnet(Cena~Reakcja+Matryca+Iluminacja, trainingdata, hidden=c(3, 4, 3), threshold=0.001)
> print(net.price)
$`call`
neuralnet(formula = Cena ~ Reakcja + Matryca + Iluminacja, data = trainingdata, 
    hidden = c(3, 4, 3), threshold = 0.001)

$response
            Cena
1  1.00000000000
2  0.46052631579
3  0.34210526316
4  0.67105263158
5  0.21052631579
6  0.00000000000
7  0.63157894737
8  0.06578947368
9  0.60526315789
10 0.34210526316

$covariate
               [,1]          [,2]          [,3]
 [1,] 0.00000000000 0.06590257880 1.00000000000
 [2,] 0.06910569106 1.00000000000 0.01204819277
 [3,] 1.00000000000 0.00000000000 0.09236947791
 [4,] 0.00406504065 0.06590257880 1.00000000000
 [5,] 0.11382113821 0.71346704871 0.00000000000
 [6,] 1.00000000000 0.00000000000 0.08032128514
 [7,] 0.00406504065 0.06303724928 0.79919678715
 [8,] 0.07723577236 0.71346704871 0.01606425703
 [9,] 1.00000000000 0.00000000000 0.10441767068
[10,] 0.00406504065 0.07449856734 1.00000000000

$model.list
$model.list$`response`
[1] "Cena"

$model.list$variables
[1] "Reakcja"    "Matryca"    "Iluminacja"


$err.fct
function (x, y) 
{
    1/2 * (y - x)^2
}
<bytecode: 0x000000001d0fe3b0>
<environment: 0x0000000006412e08>
attr(,"type")
[1] "sse"

$act.fct
function (x) 
{
    1/(1 + exp(-x))
}
<bytecode: 0x000000001d0ffdf0>
<environment: 0x0000000006412e08>
attr(,"type")
[1] "logistic"

$linear.output
[1] TRUE

$data
         Matryca    Iluminacja       Reakcja          Cena
1  0.06590257880 1.00000000000 0.00000000000 1.00000000000
2  1.00000000000 0.01204819277 0.06910569106 0.46052631579
3  0.00000000000 0.09236947791 1.00000000000 0.34210526316
4  0.06590257880 1.00000000000 0.00406504065 0.67105263158
5  0.71346704871 0.00000000000 0.11382113821 0.21052631579
6  0.00000000000 0.08032128514 1.00000000000 0.00000000000
7  0.06303724928 0.79919678715 0.00406504065 0.63157894737
8  0.71346704871 0.01606425703 0.07723577236 0.06578947368
9  0.00000000000 0.10441767068 1.00000000000 0.60526315789
10 0.07449856734 1.00000000000 0.00406504065 0.34210526316

$net.result
$net.result[[1]]
           [,1]
1  0.6731465123
2  0.2394862285
3  0.3211285699
4  0.6724287387
5  0.2402095816
6  0.3175096566
7  0.6305119965
8  0.2402788250
9  0.3248787880
10 0.6695582413


$weights
$weights[[1]]
$weights[[1]][[1]]
             [,1]          [,2]          [,3]
[1,]  1.174006880 -0.3054785138  0.3756880086
[2,]  8.092588925 -0.2253763332  0.1361514189
[3,]  4.974001865 -5.6689155636  5.3355626571
[4,] -2.193803325  2.4696168159 -3.6858099530

$weights[[1]][[2]]
             [,1]          [,2]          [,3]          [,4]
[1,] -1.629553311  0.4753855911 -0.5161530160 -0.5837459551
[2,] -1.231108065 -0.4852259357 -0.7413481953 -0.3967910161
[3,]  2.037148526  0.5893364489  2.2049649113  1.0867089270
[4,] -2.391590171 -3.1299477094 -3.0140898683 -2.9204265318

$weights[[1]][[3]]
              [,1]           [,2]         [,3]
[1,]  0.5959331181 -0.77680280234 0.8071562505
[2,]  0.6109685943 -0.08122060488 0.6591495111
[3,] -1.1428619473 -0.49810826849 0.5171030266
[4,]  2.7624551982 -0.68405606241 0.3827328830
[5,] -0.0648310547 -0.26161451519 0.2638133743

$weights[[1]][[4]]
              [,1]
[1,] -0.9726145175
[2,]  0.4711566788
[3,] -0.4631202094
[4,]  1.5039759811



$startweights
$startweights[[1]]
$startweights[[1]][[1]]
              [,1]          [,2]           [,3]
[1,]  1.8166399541  0.3591208387  0.43821349177
[2,]  1.8241889252 -0.6288534532  0.69161777696
[3,] -0.5618752545  0.5994844364 -0.07691446285
[4,] -0.1105796302  0.3801548405 -0.47298589723

$startweights[[1]][[2]]
             [,1]           [,2]         [,3]           [,4]
[1,] -1.389200613  0.71538761437 0.4022052176 -0.20734261308
[2,] -0.977526113 -0.15468106914 0.7419106292  0.01621717458
[3,]  1.041974936 -0.34116100623 2.3887229085 -0.13370285156
[4,]  1.191642665 -0.04283727167 0.1170705694  0.27921250905

$startweights[[1]][[3]]
              [,1]          [,2]         [,3]
[1,]  1.9549143216 -0.8835561777 1.1577774168
[2,]  0.9564861927  0.1664764589 0.7258809818
[3,] -0.6680074299 -0.5079806355 0.7521735894
[4,]  3.1412910786 -0.6486050299 0.5551729116
[5,]  0.2827907397 -0.1964972397 0.3719512484

$startweights[[1]][[4]]
               [,1]
[1,] -0.65415608041
[2,]  0.72148849623
[3,]  0.09529599213
[4,]  1.79211924254



$generalized.weights
$generalized.weights[[1]]
               [,1]            [,2]           [,3]
1  -0.7975252206287 -1.477511032770 0.739329162367
2  -0.0006946517391 -0.006169248575 0.003730316165
3  -0.0740325105742 -2.373631852964 1.402805279606
4  -0.8065793830634 -1.485238843423 0.742918772218
5  -0.0023529497247 -0.028146623662 0.016939571442
6  -0.0717870605915 -2.302365841395 1.361000331860
7  -0.9568241885635 -2.266596222594 1.180792546459
8  -0.0030092100431 -0.030246484267 0.018177740569
9  -0.0762564718528 -2.444014244751 1.443990880210
10 -0.8225822366747 -1.540316188322 0.771617354597


$result.matrix
                                      1
error                   0.2370579180845
reached.threshold       0.0008185365861
steps                  67.0000000000000
Intercept.to.1layhid1   1.1740068804321
Reakcja.to.1layhid1     8.0925889252426
Matryca.to.1layhid1     4.9740018654916
Iluminacja.to.1layhid1 -2.1938033246494
Intercept.to.1layhid2  -0.3054785137984
Reakcja.to.1layhid2    -0.2253763332124
Matryca.to.1layhid2    -5.6689155636297
Iluminacja.to.1layhid2  2.4696168158704
Intercept.to.1layhid3   0.3756880086225
Reakcja.to.1layhid3     0.1361514189393
Matryca.to.1layhid3     5.3355626571486
Iluminacja.to.1layhid3 -3.6858099529715
Intercept.to.2layhid1  -1.6295533114671
1layhid.1.to.2layhid1  -1.2311080653842
1layhid.2.to.2layhid1   2.0371485260981
1layhid.3.to.2layhid1  -2.3915901712873
Intercept.to.2layhid2   0.4753855911348
1layhid.1.to.2layhid2  -0.4852259356676
1layhid.2.to.2layhid2   0.5893364488852
1layhid.3.to.2layhid2  -3.1299477093771
Intercept.to.2layhid3  -0.5161530160453
1layhid.1.to.2layhid3  -0.7413481952834
1layhid.2.to.2layhid3   2.2049649112548
1layhid.3.to.2layhid3  -3.0140898682797
Intercept.to.2layhid4  -0.5837459551232
1layhid.1.to.2layhid4  -0.3967910161448
1layhid.2.to.2layhid4   1.0867089270257
1layhid.3.to.2layhid4  -2.9204265318152
Intercept.to.3layhid1   0.5959331181441
2layhid.1.to.3layhid1   0.6109685943115
2layhid.2.to.3layhid1  -1.1428619472739
2layhid.3.to.3layhid1   2.7624551981634
2layhid.4.to.3layhid1  -0.0648310547050
Intercept.to.3layhid2  -0.7768028023384
2layhid.1.to.3layhid2  -0.0812206048786
2layhid.2.to.3layhid2  -0.4981082684900
2layhid.3.to.3layhid2  -0.6840560624092
2layhid.4.to.3layhid2  -0.2616145151870
Intercept.to.3layhid3   0.8071562505237
2layhid.1.to.3layhid3   0.6591495111164
2layhid.2.to.3layhid3   0.5171030265845
2layhid.3.to.3layhid3   0.3827328830014
2layhid.4.to.3layhid3   0.2638133742861
Intercept.to.Cena      -0.9726145174673
3layhid.1.to.Cena       0.4711566788079
3layhid.2.to.Cena      -0.4631202094195
3layhid.3.to.Cena       1.5039759810627

attr(,"class")
[1] "nn"
> #Plot the neural network
> plot(net.price)
> #Test the neural network on some training data
> testdata <- as.data.frame(matrix(c(1583, 8135, 6421,
+                                    2000, 8460, 1500,
+                                    1712, 9445, 1819), nrow=3, ncol=3))
> scaled.testdata <- as.data.frame(scale(testdata[,], center=mins[1:3], scale=maxs[1:3]-mins[1:3]))
> net.results <- compute(net.price, scaled.testdata) #Run them through the neural network
> #Lets see what properties net.price has
> ls(net.results)
[1] "net.result" "neurons"   
> #Lets see the results
> print(net.results$net.result)
             [,1]
[1,] 0.2392792691
[2,] 0.2392792686
[3,] 0.2392956920